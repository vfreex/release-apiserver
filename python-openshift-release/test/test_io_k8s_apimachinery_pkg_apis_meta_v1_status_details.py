# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openshift_release
from openshift_release.models.io_k8s_apimachinery_pkg_apis_meta_v1_status_details import IoK8sApimachineryPkgApisMetaV1StatusDetails  # noqa: E501
from openshift_release.rest import ApiException

class TestIoK8sApimachineryPkgApisMetaV1StatusDetails(unittest.TestCase):
    """IoK8sApimachineryPkgApisMetaV1StatusDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoK8sApimachineryPkgApisMetaV1StatusDetails
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openshift_release.models.io_k8s_apimachinery_pkg_apis_meta_v1_status_details.IoK8sApimachineryPkgApisMetaV1StatusDetails()  # noqa: E501
        if include_optional :
            return IoK8sApimachineryPkgApisMetaV1StatusDetails(
                causes = [
                    openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/status_cause.io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause(
                        field = '0', 
                        message = '0', 
                        reason = '0', )
                    ], 
                group = '0', 
                kind = '0', 
                name = '0', 
                retry_after_seconds = 56, 
                uid = '0'
            )
        else :
            return IoK8sApimachineryPkgApisMetaV1StatusDetails(
        )

    def testIoK8sApimachineryPkgApisMetaV1StatusDetails(self):
        """Test IoK8sApimachineryPkgApisMetaV1StatusDetails"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

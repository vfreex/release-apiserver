# coding: utf-8

"""
    Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openshift_release
from openshift_release.models.io_k8s_apimachinery_pkg_apis_meta_v1_api_group_list import IoK8sApimachineryPkgApisMetaV1APIGroupList  # noqa: E501
from openshift_release.rest import ApiException

class TestIoK8sApimachineryPkgApisMetaV1APIGroupList(unittest.TestCase):
    """IoK8sApimachineryPkgApisMetaV1APIGroupList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoK8sApimachineryPkgApisMetaV1APIGroupList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openshift_release.models.io_k8s_apimachinery_pkg_apis_meta_v1_api_group_list.IoK8sApimachineryPkgApisMetaV1APIGroupList()  # noqa: E501
        if include_optional :
            return IoK8sApimachineryPkgApisMetaV1APIGroupList(
                api_version = '0', 
                groups = [
                    openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/api_group.io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup(
                        api_version = '0', 
                        kind = '0', 
                        name = '0', 
                        preferred_version = openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/group_version_for_discovery.io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery(
                            group_version = '0', 
                            version = '0', ), 
                        server_address_by_client_cid_rs = [
                            openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/server_address_by_client_cidr.io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR(
                                client_cidr = '0', 
                                server_address = '0', )
                            ], 
                        versions = [
                            openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/group_version_for_discovery.io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery(
                                group_version = '0', 
                                version = '0', )
                            ], )
                    ], 
                kind = '0'
            )
        else :
            return IoK8sApimachineryPkgApisMetaV1APIGroupList(
                groups = [
                    openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/api_group.io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup(
                        api_version = '0', 
                        kind = '0', 
                        name = '0', 
                        preferred_version = openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/group_version_for_discovery.io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery(
                            group_version = '0', 
                            version = '0', ), 
                        server_address_by_client_cid_rs = [
                            openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/server_address_by_client_cidr.io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR(
                                client_cidr = '0', 
                                server_address = '0', )
                            ], 
                        versions = [
                            openshift_release.models.io/k8s/apimachinery/pkg/apis/meta/v1/group_version_for_discovery.io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery(
                                group_version = '0', 
                                version = '0', )
                            ], )
                    ],
        )

    def testIoK8sApimachineryPkgApisMetaV1APIGroupList(self):
        """Test IoK8sApimachineryPkgApisMetaV1APIGroupList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

// +build !ignore_autogenerated

/*
Copyright 2020 The OpenShift Release APIServer Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	release "github.com/vfreex/release-apiserver/pkg/apis/release"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*GitSource)(nil), (*release.GitSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GitSource_To_release_GitSource(a.(*GitSource), b.(*release.GitSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*release.GitSource)(nil), (*GitSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_release_GitSource_To_v1alpha1_GitSource(a.(*release.GitSource), b.(*GitSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OcpBuildData)(nil), (*release.OcpBuildData)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_OcpBuildData_To_release_OcpBuildData(a.(*OcpBuildData), b.(*release.OcpBuildData), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*release.OcpBuildData)(nil), (*OcpBuildData)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_release_OcpBuildData_To_v1alpha1_OcpBuildData(a.(*release.OcpBuildData), b.(*OcpBuildData), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ReleaseStream)(nil), (*release.ReleaseStream)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ReleaseStream_To_release_ReleaseStream(a.(*ReleaseStream), b.(*release.ReleaseStream), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*release.ReleaseStream)(nil), (*ReleaseStream)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_release_ReleaseStream_To_v1alpha1_ReleaseStream(a.(*release.ReleaseStream), b.(*ReleaseStream), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ReleaseStreamList)(nil), (*release.ReleaseStreamList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ReleaseStreamList_To_release_ReleaseStreamList(a.(*ReleaseStreamList), b.(*release.ReleaseStreamList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*release.ReleaseStreamList)(nil), (*ReleaseStreamList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_release_ReleaseStreamList_To_v1alpha1_ReleaseStreamList(a.(*release.ReleaseStreamList), b.(*ReleaseStreamList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ReleaseStreamSpec)(nil), (*release.ReleaseStreamSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ReleaseStreamSpec_To_release_ReleaseStreamSpec(a.(*ReleaseStreamSpec), b.(*release.ReleaseStreamSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*release.ReleaseStreamSpec)(nil), (*ReleaseStreamSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_release_ReleaseStreamSpec_To_v1alpha1_ReleaseStreamSpec(a.(*release.ReleaseStreamSpec), b.(*ReleaseStreamSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ReleaseStreamStatus)(nil), (*release.ReleaseStreamStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ReleaseStreamStatus_To_release_ReleaseStreamStatus(a.(*ReleaseStreamStatus), b.(*release.ReleaseStreamStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*release.ReleaseStreamStatus)(nil), (*ReleaseStreamStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_release_ReleaseStreamStatus_To_v1alpha1_ReleaseStreamStatus(a.(*release.ReleaseStreamStatus), b.(*ReleaseStreamStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_GitSource_To_release_GitSource(in *GitSource, out *release.GitSource, s conversion.Scope) error {
	out.Url = in.Url
	out.Ref = in.Ref
	out.Path = in.Path
	return nil
}

// Convert_v1alpha1_GitSource_To_release_GitSource is an autogenerated conversion function.
func Convert_v1alpha1_GitSource_To_release_GitSource(in *GitSource, out *release.GitSource, s conversion.Scope) error {
	return autoConvert_v1alpha1_GitSource_To_release_GitSource(in, out, s)
}

func autoConvert_release_GitSource_To_v1alpha1_GitSource(in *release.GitSource, out *GitSource, s conversion.Scope) error {
	out.Url = in.Url
	out.Ref = in.Ref
	out.Path = in.Path
	return nil
}

// Convert_release_GitSource_To_v1alpha1_GitSource is an autogenerated conversion function.
func Convert_release_GitSource_To_v1alpha1_GitSource(in *release.GitSource, out *GitSource, s conversion.Scope) error {
	return autoConvert_release_GitSource_To_v1alpha1_GitSource(in, out, s)
}

func autoConvert_v1alpha1_OcpBuildData_To_release_OcpBuildData(in *OcpBuildData, out *release.OcpBuildData, s conversion.Scope) error {
	if err := Convert_v1alpha1_GitSource_To_release_GitSource(&in.Git, &out.Git, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_OcpBuildData_To_release_OcpBuildData is an autogenerated conversion function.
func Convert_v1alpha1_OcpBuildData_To_release_OcpBuildData(in *OcpBuildData, out *release.OcpBuildData, s conversion.Scope) error {
	return autoConvert_v1alpha1_OcpBuildData_To_release_OcpBuildData(in, out, s)
}

func autoConvert_release_OcpBuildData_To_v1alpha1_OcpBuildData(in *release.OcpBuildData, out *OcpBuildData, s conversion.Scope) error {
	if err := Convert_release_GitSource_To_v1alpha1_GitSource(&in.Git, &out.Git, s); err != nil {
		return err
	}
	return nil
}

// Convert_release_OcpBuildData_To_v1alpha1_OcpBuildData is an autogenerated conversion function.
func Convert_release_OcpBuildData_To_v1alpha1_OcpBuildData(in *release.OcpBuildData, out *OcpBuildData, s conversion.Scope) error {
	return autoConvert_release_OcpBuildData_To_v1alpha1_OcpBuildData(in, out, s)
}

func autoConvert_v1alpha1_ReleaseStream_To_release_ReleaseStream(in *ReleaseStream, out *release.ReleaseStream, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ReleaseStreamSpec_To_release_ReleaseStreamSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ReleaseStreamStatus_To_release_ReleaseStreamStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ReleaseStream_To_release_ReleaseStream is an autogenerated conversion function.
func Convert_v1alpha1_ReleaseStream_To_release_ReleaseStream(in *ReleaseStream, out *release.ReleaseStream, s conversion.Scope) error {
	return autoConvert_v1alpha1_ReleaseStream_To_release_ReleaseStream(in, out, s)
}

func autoConvert_release_ReleaseStream_To_v1alpha1_ReleaseStream(in *release.ReleaseStream, out *ReleaseStream, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_release_ReleaseStreamSpec_To_v1alpha1_ReleaseStreamSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_release_ReleaseStreamStatus_To_v1alpha1_ReleaseStreamStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_release_ReleaseStream_To_v1alpha1_ReleaseStream is an autogenerated conversion function.
func Convert_release_ReleaseStream_To_v1alpha1_ReleaseStream(in *release.ReleaseStream, out *ReleaseStream, s conversion.Scope) error {
	return autoConvert_release_ReleaseStream_To_v1alpha1_ReleaseStream(in, out, s)
}

func autoConvert_v1alpha1_ReleaseStreamList_To_release_ReleaseStreamList(in *ReleaseStreamList, out *release.ReleaseStreamList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]release.ReleaseStream)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_ReleaseStreamList_To_release_ReleaseStreamList is an autogenerated conversion function.
func Convert_v1alpha1_ReleaseStreamList_To_release_ReleaseStreamList(in *ReleaseStreamList, out *release.ReleaseStreamList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ReleaseStreamList_To_release_ReleaseStreamList(in, out, s)
}

func autoConvert_release_ReleaseStreamList_To_v1alpha1_ReleaseStreamList(in *release.ReleaseStreamList, out *ReleaseStreamList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ReleaseStream)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_release_ReleaseStreamList_To_v1alpha1_ReleaseStreamList is an autogenerated conversion function.
func Convert_release_ReleaseStreamList_To_v1alpha1_ReleaseStreamList(in *release.ReleaseStreamList, out *ReleaseStreamList, s conversion.Scope) error {
	return autoConvert_release_ReleaseStreamList_To_v1alpha1_ReleaseStreamList(in, out, s)
}

func autoConvert_v1alpha1_ReleaseStreamSpec_To_release_ReleaseStreamSpec(in *ReleaseStreamSpec, out *release.ReleaseStreamSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_OcpBuildData_To_release_OcpBuildData(&in.OcpBuildData, &out.OcpBuildData, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ReleaseStreamSpec_To_release_ReleaseStreamSpec is an autogenerated conversion function.
func Convert_v1alpha1_ReleaseStreamSpec_To_release_ReleaseStreamSpec(in *ReleaseStreamSpec, out *release.ReleaseStreamSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ReleaseStreamSpec_To_release_ReleaseStreamSpec(in, out, s)
}

func autoConvert_release_ReleaseStreamSpec_To_v1alpha1_ReleaseStreamSpec(in *release.ReleaseStreamSpec, out *ReleaseStreamSpec, s conversion.Scope) error {
	if err := Convert_release_OcpBuildData_To_v1alpha1_OcpBuildData(&in.OcpBuildData, &out.OcpBuildData, s); err != nil {
		return err
	}
	return nil
}

// Convert_release_ReleaseStreamSpec_To_v1alpha1_ReleaseStreamSpec is an autogenerated conversion function.
func Convert_release_ReleaseStreamSpec_To_v1alpha1_ReleaseStreamSpec(in *release.ReleaseStreamSpec, out *ReleaseStreamSpec, s conversion.Scope) error {
	return autoConvert_release_ReleaseStreamSpec_To_v1alpha1_ReleaseStreamSpec(in, out, s)
}

func autoConvert_v1alpha1_ReleaseStreamStatus_To_release_ReleaseStreamStatus(in *ReleaseStreamStatus, out *release.ReleaseStreamStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_ReleaseStreamStatus_To_release_ReleaseStreamStatus is an autogenerated conversion function.
func Convert_v1alpha1_ReleaseStreamStatus_To_release_ReleaseStreamStatus(in *ReleaseStreamStatus, out *release.ReleaseStreamStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ReleaseStreamStatus_To_release_ReleaseStreamStatus(in, out, s)
}

func autoConvert_release_ReleaseStreamStatus_To_v1alpha1_ReleaseStreamStatus(in *release.ReleaseStreamStatus, out *ReleaseStreamStatus, s conversion.Scope) error {
	return nil
}

// Convert_release_ReleaseStreamStatus_To_v1alpha1_ReleaseStreamStatus is an autogenerated conversion function.
func Convert_release_ReleaseStreamStatus_To_v1alpha1_ReleaseStreamStatus(in *release.ReleaseStreamStatus, out *ReleaseStreamStatus, s conversion.Scope) error {
	return autoConvert_release_ReleaseStreamStatus_To_v1alpha1_ReleaseStreamStatus(in, out, s)
}
